name: Multiples jops
on:
  push:
    branches:
      - 'develop'
      - 'feature/**'
      - 'master'
jobs:
  job1: 
     name: Job1 Starting with a Maven workflow template
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      - name: set up node
        uses: actions/setup-node@v1
      - name: Install bats
        run: npm install -g bats
      - name: execute a cmd
        run: bats -v
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: mvn -B package --file pom.xml
  
  job2:
    name: job2 Specifying the JVM and node version and architecture
    needs: job5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      - uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
      - uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
      - name: Install node.js packages
        run: npm install
  
  job3:
    name: job3 Running on a different operating system
    needs: job3_publish
    runs-on: ${{ matrix.os }}
    strategy:
       matrix:
         os: [ubuntu-16.04, ubuntu-18.04,ubuntu-20.04] 
         node: [6, 8, 10] 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
      - name : Run cmd
        run: |
          mvn -version
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      
      - name: Example Checking os and node version
        run: |
          node --version
          
  job4:
    name: job4 Building and testing your code
    needs: job2
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        run: mvn clean verify -P-webpack
      #- name: Run frontend test
        #run: npm run test  
  
  job5:
    name: job5 Caching dependencies to improve run
    needs: job1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install node.js packages
        run: npm install
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package --file pom.xml
    
  job6:
    name: job6 Packaging workflow data as artifacts
    runs-on: ubuntu-20.04
    needs: job5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn -B package --file pom.xml
      - run: |
          pwd
          mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
      #- run: mkdir jacoco && cp target/jacoco/* jacoco
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: target/test-results/coverage
          
          
  job3_publish:
    name: publish snapshot
    needs: job1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      - uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
          
      - name: Generate settings.xm
        run: | 
          echo "<?xml version='"1.0"' encoding='"UTF-8"'?>
          <settings xmlns='"http://maven.apache.org/SETTINGS/1.0.0"'
          xmlns:xsi='"http://www.w3.org/2001/XMLSchema-instance"'
          xsi:schemaLocation='"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"'>
           <servers>
               <server>
                    <id>snapshots</id>
                    <username>${{ secrets.JFROG_USER }}</username>
                    <password>${{ secrets.JFROG_ENCRYPTED_PWD }}</password>
               </server>
               <server>
                    <id>central</id>
                    <username>${{ secrets.JFROG_USER }}</username>
                    <password>${{ secrets.JFROG_ENCRYPTED_PWD }}</password>
              </server>
           </servers>
          </settings>" >> settings.xml
          
          
          mv settings.xml ~/.m2/settings.xml
          cat ~/.m2/settings.xml
      - name: publish snapshot artifact to jfrog artifactory
        run: |
             mvn -ntp package deploy -Pprod -DskipTests
  
      
    



  
              
  
